import{c as $,e as I,r as u,j as l,P as m,b as w}from"./index-DTq1lNJo.js";/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const L=$("Share2",[["circle",{cx:"18",cy:"5",r:"3",key:"gq8acd"}],["circle",{cx:"6",cy:"12",r:"3",key:"w7nqdw"}],["circle",{cx:"18",cy:"19",r:"3",key:"1xt0gg"}],["line",{x1:"8.59",x2:"15.42",y1:"13.51",y2:"17.49",key:"47mynk"}],["line",{x1:"15.41",x2:"8.59",y1:"6.51",y2:"10.49",key:"1n3mei"}]]);var c="Progress",d=100,[E,C]=I(c),[R,S]=E(c),x=u.forwardRef((e,r)=>{const{__scopeProgress:n,value:o=null,max:a,getValueLabel:N=j,...b}=e;(a||a===0)&&!v(a)&&console.error(_(`${a}`,"Progress"));const s=v(a)?a:d;o!==null&&!p(o,s)&&console.error(k(`${o}`,"Progress"));const t=p(o,s)?o:null,h=i(t)?N(t,s):void 0;return l.jsx(R,{scope:n,value:t,max:s,children:l.jsx(m.div,{"aria-valuemax":s,"aria-valuemin":0,"aria-valuenow":i(t)?t:void 0,"aria-valuetext":h,role:"progressbar","data-state":P(t,s),"data-value":t??void 0,"data-max":s,...b,ref:r})})});x.displayName=c;var f="ProgressIndicator",g=u.forwardRef((e,r)=>{const{__scopeProgress:n,...o}=e,a=S(f,n);return l.jsx(m.div,{"data-state":P(a.value,a.max),"data-value":a.value??void 0,"data-max":a.max,...o,ref:r})});g.displayName=f;function j(e,r){return`${Math.round(e/r*100)}%`}function P(e,r){return e==null?"indeterminate":e===r?"complete":"loading"}function i(e){return typeof e=="number"}function v(e){return i(e)&&!isNaN(e)&&e>0}function p(e,r){return i(e)&&!isNaN(e)&&e<=r&&e>=0}function _(e,r){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${r}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${d}\`.`}function k(e,r){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${r}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${d} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var y=x,M=g;const V=u.forwardRef(({className:e,value:r,...n},o)=>l.jsx(y,{ref:o,className:w("relative h-4 w-full overflow-hidden rounded-full bg-secondary",e),...n,children:l.jsx(M,{className:"h-full w-full flex-1 bg-primary transition-all",style:{transform:`translateX(-${100-(r||0)}%)`}})}));V.displayName=y.displayName;export{V as P,L as S};
